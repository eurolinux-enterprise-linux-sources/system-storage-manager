From 9ef856dfc780c61f8a1229b279b525693a64d264 Mon Sep 17 00:00:00 2001
From: Lukas Czerner <lczerner@redhat.com>
Date: Thu, 26 Jul 2018 14:34:45 +0200
Subject: [PATCH 15/22] btrfs: Send udev change event for every device after fs
 creation

Udev can still interfere when creating btrfs file system with multiple
devices. We did send the udev change event after the file system
creation, however that was only for a single device.

Send udev change even for every device and synchronize with udevadm
settle afterwards. This fixes the bashtest 018 btrfs failure.

Update unittests. Setup btrfs mock_run to ignore udevadm command since
it's irrelevant here.

Signed-off-by: Lukas Czerner <lczerner@redhat.com>
Reviewed-by: Jan Tulak <jtulak@redhat.com>
---
 ssmlib/backends/btrfs.py      |  4 +++-
 ssmlib/misc.py                |  6 +++++-
 tests/unittests/test_btrfs.py | 16 ++++++++++------
 3 files changed, 18 insertions(+), 8 deletions(-)

diff --git a/ssmlib/backends/btrfs.py b/ssmlib/backends/btrfs.py
index afd7826..51bb041 100644
--- a/ssmlib/backends/btrfs.py
+++ b/ssmlib/backends/btrfs.py
@@ -466,7 +466,9 @@ class BtrfsPool(Btrfs, template.BackendPool):
             command.extend(['--force'])
         command.extend(devs)
         misc.run(command, stdout=True)
-        misc.send_udev_event(devs[0], "change")
+        for dev in devs[:]:
+            misc.send_udev_event(dev, "change")
+        misc.udev_settle()
         return name
 
     def _check_new_path(self, path, name):
diff --git a/ssmlib/misc.py b/ssmlib/misc.py
index 9790e7a..90297bf 100644
--- a/ssmlib/misc.py
+++ b/ssmlib/misc.py
@@ -215,6 +215,10 @@ def send_udev_event(device, event):
         f.write(event)
 
 
+def udev_settle():
+    run(['udevadm', 'settle'], stderr=False, can_fail=True)
+
+
 def get_device_by_uuid(uuid):
     path = "/dev/disk/by-uuid/{0}".format(uuid)
     return os.path.abspath(os.path.join(os.path.dirname(path),
@@ -398,7 +402,7 @@ def wipefs(devices, signatures):
         signatures = [signatures]
     command = ['wipefs', '-a', '-t', ','.join(signatures)] + devices
     # Avoid race with udev
-    run(['udevadm', 'settle'], stderr=False, can_fail=True)
+    udev_settle()
     run(command)
 
 
diff --git a/tests/unittests/test_btrfs.py b/tests/unittests/test_btrfs.py
index 0c11ba6..1ab2b0f 100644
--- a/tests/unittests/test_btrfs.py
+++ b/tests/unittests/test_btrfs.py
@@ -23,6 +23,8 @@ from ssmlib import main
 from ssmlib.backends import btrfs
 from tests.unittests.common import *
 
+IGNORE_CMDS = ['udevadm']
+
 class BtrfsFunctionCheck(MockSystemDataSource):
 
     def setUp(self):
@@ -54,7 +56,9 @@ class BtrfsFunctionCheck(MockSystemDataSource):
             if type(item) is not str:
                 cmd[i] = str(item)
 
-        self.run_data.append(" ".join(cmd))
+        # Ignore command we're not really interested in
+        if cmd[0] not in IGNORE_CMDS:
+            self.run_data.append(" ".join(cmd))
         output = ""
         if cmd[:3] == ['btrfs', 'filesystem', 'show']:
             for (pool, p_data) in self.pool_data.items():
@@ -187,16 +191,16 @@ class BtrfsFunctionCheck(MockSystemDataSource):
         self._checkCmd("ssm remove /dev/sdd /dev/sdb other_pool my_pool default_pool:/dev/default_pool/vol001", [],
             "btrfs subvolume delete /mnt/test")
         self._cmdEq("wipefs -a -t btrfs /dev/sdc2 /dev/sdc3 /dev/sdc1", -2)
-        self._cmdEq("wipefs -a -t btrfs /dev/sdd /dev/sde", -4)
-        self._cmdEq("btrfs device delete /dev/sdb /mnt/test", -6)
-        self._cmdEq("btrfs device delete /dev/sdd /tmp/mount", -7)
+        self._cmdEq("wipefs -a -t btrfs /dev/sdd /dev/sde", -3)
+        self._cmdEq("btrfs device delete /dev/sdb /mnt/test", -4)
+        self._cmdEq("btrfs device delete /dev/sdd /tmp/mount", -5)
 
         self._removeMount("/dev/sda")
         # remove all
         self._checkCmd("ssm remove --all", [],
             "wipefs -a -t btrfs /dev/sdd /dev/sde")
-        self._cmdEq("wipefs -a -t btrfs /dev/sdc2 /dev/sdc3 /dev/sdc1", -3)
-        self._cmdEq("wipefs -a -t btrfs /dev/sdb /dev/sda", -5)
+        self._cmdEq("wipefs -a -t btrfs /dev/sdc2 /dev/sdc3 /dev/sdc1", -2)
+        self._cmdEq("wipefs -a -t btrfs /dev/sdb /dev/sda", -3)
 
         # TODO
         # remove force
-- 
2.21.0

