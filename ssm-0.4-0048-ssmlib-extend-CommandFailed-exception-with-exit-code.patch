From 38852b2731065e605428272d7b3e703166c3551f Mon Sep 17 00:00:00 2001
From: Jan Tulak <jtulak@redhat.com>
Date: Fri, 12 Jan 2018 17:14:11 +0100
Subject: [PATCH 22/22] ssmlib: extend CommandFailed exception with exit code

Add the exit code with which the command failed both to the error
message and to the exception itself.

Signed-off-by: Jan Tulak <jtulak@redhat.com>
---
 ssmlib/misc.py    | 4 ++--
 ssmlib/problem.py | 3 ++-
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/ssmlib/misc.py b/ssmlib/misc.py
index cd0dda8..75ed1f0 100644
--- a/ssmlib/misc.py
+++ b/ssmlib/misc.py
@@ -508,7 +508,7 @@ def run(cmd, show_cmd=False, stdout=False, stderr=True, can_fail=False,
 
     output, error = proc.communicate(input=stdin_data)
 
-    err_msg = "ERROR running command: \"{0}\"".format(" ".join(cmd))
+    err_msg = "ERROR exit code {0} for running command: \"{1}\"".format(proc.returncode, " ".join(cmd))
     if _can_fail_hacks(cmd, proc.returncode, error):
         can_fail = True
 
@@ -524,7 +524,7 @@ def run(cmd, show_cmd=False, stdout=False, stderr=True, can_fail=False,
             print(output)
         if error is not None:
             print(error)
-        raise problem.CommandFailed(err_msg)
+        raise problem.CommandFailed(err_msg, exitcode=proc.returncode)
 
     if not return_stdout:
         output = None
diff --git a/ssmlib/problem.py b/ssmlib/problem.py
index b349d61..11b7d87 100644
--- a/ssmlib/problem.py
+++ b/ssmlib/problem.py
@@ -133,8 +133,9 @@ class CanNotRun(SsmError):
 
 
 class CommandFailed(SsmError):
-    def __init__(self, msg, errcode=2012):
+    def __init__(self, msg, errcode=2012, exitcode=-1):
         super(CommandFailed, self).__init__(msg, errcode)
+        self.exitcode = exitcode
 
 
 class UserInterrupted(SsmError):
-- 
2.21.0

